0:e->next = n;
1:e->next = n;
1:*p = e;
0:*p = e;

比如这样，就能让线程1的insert丢掉，反之线程0的丢

另外get里面扫描key的时候，如果扫到一半另外一个线程插了一个key,value进去，就会导致同一个key插两次，而不是一个key刷新value

因此从扫描key开始加锁，一直到函数最后释放锁

锁开数组，大小和哈希表一样，对应索引即可

由于所有的读都在写之后，所以读完全不用加锁

